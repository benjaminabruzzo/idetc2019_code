<launch>
	<arg name="ugv_n" 		default="ugv1" />
	<arg name="launcher" 	default="hast_n" />
	<node pkg="hast"			type="killhast"		 	output="screen" required="true" name="killhast_$(arg launcher)_$(env HOST)_$(arg ugv_n)"/>
	<node pkg="hast"			type="shutdownListener" output="screen" required="true" name="shutdownListener_$(arg launcher)_$(env HOST)_$(arg ugv_n)"/>
	<arg name="trial" 		default="000" />
	<arg name="date" 			default="20181207" />
	<arg name="user" 			default="$(env USER)" />

<!-- 	<include file="$(find hast)/launch/hast_bag.launch">
		<arg name="trial" 	value="$(arg trial)" />
		<arg name="date" 	value="$(arg date)" />
		<arg name="user" 	value="$(arg user)" />
		<arg name="ugv_n" 	value="$(arg ugv_n)" />
	</include> -->

	<param name="/hast/trial"  		value="$(arg trial)"  	type = "str" />
	<param name="/hast/user" 			value="$(arg user)" 	type = "str" />
	<param name="/hast/date" 			value="$(arg date)" 	type = "str" />

	<arg name="saveraw" 				default="false" />
	<arg name="showcircles" 		default="true"/>
	<arg name="showYUV" 				default="false"/>
	<arg name="gazebo_sim" 			default="true"/>
	<arg name="trigger_saveraw"		default="false" />  <!-- rosrun hast triggerSaveRaw -->
	<arg name="color_param_file" 	default="$(find hast)/config/stereo_tbrl_params.yaml" />	
	<include file="$(find hast)/launch/hast_stereo_obs.launch">
		<arg name="trial" 				value="$(arg trial)"/>
		<arg name="date" 					value="$(arg date)"/>
		<arg name="user" 					value="$(arg user)"/>

		<arg name="ugv_n" 					value="$(arg ugv_n)"/>
		<arg name="gazebo_sim" 			value="$(arg gazebo_sim)"/>
		<arg name="roi_halfwindow" 	value="100" />
		<arg name="showcircles" 		value="$(arg showcircles)"/>
		<arg name="showYUV" 				value="$(arg showYUV)"/>
		
		<arg name="uav_TF_parent" 		value="$(arg ugv_n)/hast/base_footprint"	/>
		<arg name="uav_TF_child" 			value="$(arg ugv_n)/uav/stereo_raw" />
		<arg name="color_param_file" 	value="$(arg color_param_file)"/>

		<arg name="trigger_saveraw" 	value="$(arg trigger_saveraw)"/>
		<arg name="saveraw" 					value="$(arg saveraw)"/>
	</include>

	<arg name="useBackstepping" 	default="false" />
	<node 	pkg="hast" 	type="uavAutopilot"	name="$(arg ugv_n)_uavAutopilot_$(env HOST)">
		<param name="date" 				value="$(arg date)" type="str"/>
		<param name="trial" 			value="$(arg trial)" type="str"/>
		<param name="user" 				value="$(arg user)"/>

		<param name="uav_cmd_topic" 	value="$(arg ugv_n)/uav/cmd_vel"/>

		<param name="MinTilt" 		value="0.0001"/> 	<!-- min threshold for tilt on any one axis in degrees-->
		<param name="MaxTilt" 		value="0.4"/> 		<!-- max threshold for tilt on any one axis in degrees-->
		<param name="MaxYawRate" 	value="0.4"/> 		<!-- //upped for tilt testing to 0.75, 0.3 nominal-->

		<!-- legacy PV controller -->
		<param name="Kp" 	value="0.25"/> 	<!-- position gain-->
		<param name="Kv" 	value="0.25"/> 	<!-- velocity gain-->
		<param name="Ky" 	value="0.025"/> <!-- yaw gain-->

		<!-- backstepping PID controller -->
		<param name="useBackstepping"	value="$(arg useBackstepping)"/>
		<param name="u_cmd_scale" 	value="1"/> 

		<param name="posXY_gain_p" 	value="0.5"/> 
		<param name="posXY_gain_i" 	value="0.001"/> 
		<param name="posXY_gain_d" 	value="0.00025"/> 
		<param name="posXY_limit" 	value="1.00"/> 
		<param name="velXY_gain_p" 	value="0.50"/>
		<param name="velXY_gain_i" 	value="0.00"/>  
		<param name="velXY_gain_d" 	value="0.00"/> 
		<param name="velXY_limit" 	value="0.75"/> 
		<param name="RP_gain_p" value="5.0"/> 
		<param name="RP_gain_d" value="1.0"/> 
		<param name="RP_limit" 	value="5.0"/> 

		<param name="ugvEstimatedState_sub" 	value="/$(arg ugv_n)/ckf_state"/>

		
	</node>

	<node 	pkg="hast" 	type="oneCKF"	name="$(arg ugv_n)_oneCKF_$(env HOST)"	required="true"> <!--  output="screen"	> -->
		<param name="date" 				value="$(arg date)" type="str"/>
		<param name="trial" 			value="$(arg trial)" type="str"/>
		<param name="user" 				value="$(arg user)"/>

		<param name="ckf_TF_parent" 		value="$(arg ugv_n)/hast/odom"/>
		<param name="ckf_TF_child" 			value="/hast/uav/ardrone_base_link"			/>
		<param name="odom_topic" 			value="$(arg ugv_n)/hast/odom"	/>
		<param name="footprint_topic" 		value="$(arg ugv_n)/oneckf_base_footprint"	/>
		<param name="ugvCmd_topic"			value="$(arg ugv_n)/cmd_vel_limited"/>
		<param name="uav_baseframe"			value="hast/uav/ardrone_base_link"/>
		<param name="uav_imu_yawdriftrate"	value="0"/>
		<param name="tag_max_id"			value="30" type="int"/> 
		<param name="tag_detection_topic"	value="/ardrone/tag_detections"/>
		<param name="Pose_sub" 				value="/$(arg ugv_n)/stereo/pose"/>
		<param name="ugvn_state" 			value="/$(arg ugv_n)/ckf_state"/>

		<param name="obstacle_cloud_topic" 	value="/$(arg ugv_n)/april/PointCloud2"/>
		<param name="goal_cloud_topic" 		value="/$(arg ugv_n)/goal/PointCloud2"/>

	</node>

	<include file="$(find hast)/launch/ugv_logger.launch">
		<arg name="date" 				value="$(arg date)"/>
		<arg name="trial" 				value="$(arg trial)" />
		<arg name="ugv_n" 				value="$(arg ugv_n)" />
		<arg name="cmd_vel_x_limit" 	value="0.5" />
		<arg name="cmd_vel_w_limit" 	value="0.8" />
		<arg name="cmd_vel_sub_topic" 	value="/$(arg ugv_n)/cmd_vel_raw" />
		<arg name="cmd_vel_pub_topic" 	value="/$(arg ugv_n)/cmd_vel_limited" />
		<!-- <arg name="global_path_topic" 	value="/move_base/TrajectoryPlannerROS/global_plan" /> -->
 	</include>

	<arg name="down_image"  		default="image_rect" />
	<arg name="tf_x_offset" 		default="0.025" />
	<include file="$(find hast)/launch/hast_april_bottomcam.launch">
		<arg name="image" 			value="$(arg down_image)"/>
		<arg name="tf_x_offset" 	value="$(arg tf_x_offset)"/>
	</include>


</launch>
